后端还有两种开发方式：
1.直接与fe融合在一起，使用同一个node_modules，这样的好处是项目整合度非常好
但是，这样也使得fe与这里的be绑定在了一起，如果be想替换成java等其他语言的后端，
那么项目node_module中关于nodejs的be相关就都是废代码了，因此为了保持前端项目的纯洁度
，可以使用第二种方法

2.在be中单独建一套项目，有单独的package.json，形成一个单独的express应用。这样可以保持
前端项目的清洁，没有后端的污染代码。但这样融合度就比较低了。